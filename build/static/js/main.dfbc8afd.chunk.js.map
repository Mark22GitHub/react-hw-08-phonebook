{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteFromContactsRequest","deleteFromContactsSuccess","deleteFromContactsError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","contactId","delete","getAllContacts","state","contacts","items","getFilter","filter","getLoadingContacts","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","payload","id","combineReducers","INITIAL_STATE","ContactForm","nameInputId","uuidv4","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","reset","onSubmit","className","styles","contactForm","this","htmlFor","input","type","onChange","placeholder","addContact","Component","connect","contactsSelectors","contactsOperations","onDeleteFromContacts","map","ContactListItem","ContactsListText","ContactsListButton","onClick","e","target","App","fetchContacts","style","width","margin","isLoadingContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfbc8afd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactList_ContactListItem__14o34\",\"ContactsListText\":\"ContactList_ContactsListText__2_Iht\",\"ContactsListButton\":\"ContactList_ContactsListButton__2wEPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__35l_Z\",\"input\":\"Filter_input__2CEsa\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteFromContactsRequest = createAction(\n  \"contacts/deleteFromContactsRequest\"\n);\nexport const deleteFromContactsSuccess = createAction(\n  \"contacts/deleteFromContactsSuccess\"\n);\nexport const deleteFromContactsError = createAction(\n  \"contacts/deleteFromContactsError\"\n);\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n/*Redux Tookit*/\n\n// export const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// export const deleteFromContacts = createAction(\"contacts/delete\");\n\n// export const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteFromContactsRequest,\n  deleteFromContactsSuccess,\n  deleteFromContactsError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:2204\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nconst deleteFromContacts = (contactId) => (dispatch) => {\n  dispatch(deleteFromContactsRequest());\n\n  axios\n    .delete(`contacts/${contactId}`)\n    .then(() => dispatch(deleteFromContactsSuccess(contactId)))\n    .catch((error) => dispatch(deleteFromContactsError(error)));\n};\n\n// ===========================================================\n// async Redux / async/await\n\n// const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const { data } = await axios.get(\"/contacts\");\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n// };\n\n// const addContact = ({ name, number }) => async (dispatch) => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n\n//   dispatch(addContactsRequest());\n\n//   try {\n//     const { data } = await axios.post(\"/contacts\", contact);\n//     dispatch(addContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(addContactsError(error));\n//   }\n// };\n\n// const deleteFromContacts = (contactId) => async (dispatch) => {\n//   dispatch(deleteFromContactsRequest());\n\n//   try {\n//     await axios.delete(`contacts/${contactId}`);\n//     dispatch(deleteFromContactsSuccess(contactId));\n//   } catch (error) {\n//     dispatch(deleteFromContactsError(error));\n//   }\n// };\n// ===========================================================\n\nexport default { fetchContacts, addContact, deleteFromContacts };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoadingContacts = (state) => state.contacts.loading;\nconst getAllContacts = (state) => state.contacts.items;\nconst getFilter = (state) => state.contacts.filter;\n\n// memoized selector\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport default {\n  getLoadingContacts,\n  getAllContacts,\n  getFilter,\n  getVisibleContacts,\n};\n\n// combined selector\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteFromContactsRequest,\n  deleteFromContactsSuccess,\n  deleteFromContactsError,\n  changeFilter,\n} from \"./contacts-actions\";\n\n/*Redux Tookit*/\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteFromContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteFromContactsRequest]: () => true,\n  [deleteFromContactsSuccess]: () => false,\n  [deleteFromContactsError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\n\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\n\nexport const INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n  // ==================\n\n  render() {\n    return (\n      <>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n              placeholder=\"enter name\"\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={styles.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n              placeholder=\"enter number\"\n            />\n          </label>\n\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (payload) => dispatch(contactsOperations.addContact(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\n\nconst ContactList = ({ contacts, onDeleteFromContacts }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.ContactListItem}>\n            <p className={styles.ContactsListText}>\n              {name}:{number}\n            </p>\n            <button\n              className={styles.ContactsListButton}\n              onClick={() => onDeleteFromContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteFromContacts: (id) =>\n    dispatch(contactsOperations.deleteFromContacts(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n\n  onDeleteFromContacts: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { contactsSelectors } from \"../../redux/contacts\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contact by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm/\";\nimport ContactList from \"./Components/ContactList/\";\nimport Filter from \"./Components/Filter/\";\n\nimport { connect } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"./redux/contacts\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"300px\", margin: \"0 auto\" }}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: contactsSelectors.getLoadingContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { contactsReducer } from \"./contacts\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\n/*Redux Tookit*/\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={\"Loading\"} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1I-Eb\",\"addContact\":\"ContactForm_addContact__oiTcK\",\"input\":\"ContactForm_input__3dHde\"};"],"sourceRoot":""}